const { fetch } = require("undici");
const fs = require("fs");
const path = require("path");

/**
 * Fetches holidays from Brasil API for a specific year
 */
async function fetchHolidays(year) {
  const response = await fetch(
    `https://brasilapi.com.br/api/feriados/v1/${year}`
  );
  
  if (!response.ok) {
    throw new Error(`Failed to fetch holidays for ${year}: ${response.status}`);
  }
  
  return response.json();
}

/**
 * Generates static holiday data for current year and next year
 */
async function generateStaticData() {
  const currentYear = new Date().getFullYear();
  const years = [currentYear, currentYear + 1];
  
  console.log(`Generating static holiday data for years: ${years.join(', ')}`);
  
  const holidaysMap = {};
  
  // Fetch holidays for each year
  for (const year of years) {
    try {
      console.log(`Fetching holidays for ${year}...`);
      const holidays = await fetchHolidays(year);
      holidaysMap[year] = holidays;
      console.log(`✓ Fetched ${holidays.length} holidays for ${year}`);
    } catch (error) {
      console.error(`✗ Failed to fetch holidays for ${year}:`, error.message);
      throw error;
    }
  }
  
  // Generate TypeScript content
  const content = `import type { Holiday } from './types';

/**
 * Static holiday data generated at build time
 * This file is automatically generated by scripts/generate-static.js
 * DO NOT EDIT MANUALLY
 * 
 * Generated on: ${new Date().toISOString().slice(0, 10)}
 * Years included: ${years.join(', ')}
 */
export const STATIC_HOLIDAYS: Readonly<Record<number, Holiday[]>> = Object.freeze(${JSON.stringify(holidaysMap, null, 2)});`;
  
  // Write to static-data.ts
  const outputPath = path.join(__dirname, '../src/static-data.ts');
  fs.writeFileSync(outputPath, content, 'utf8');
  
  console.log(`✓ Static data written to src/static-data.ts`);
}

// Execute the generation
generateStaticData()
  .then(() => {
    console.log('✓ Static data generation completed successfully');
    process.exit(0);
  })
  .catch((error) => {
    console.error('✗ Static data generation failed:', error);
    process.exit(1);
  });